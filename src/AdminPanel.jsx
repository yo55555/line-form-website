import React, { useState, useEffect } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from './components/ui/card'
import { Button } from './components/ui/button'
import { Input } from './components/ui/input'
import { Label } from './components/ui/label'
import { Textarea } from './components/ui/textarea'
import { Tabs, TabsContent, TabsList, TabsTrigger } from './components/ui/tabs'
import { Settings, FileText, Palette, Database, Eye, LogOut } from 'lucide-react'

const AdminPanel = ({ onLogout }) => {
  const [config, setConfig] = useState({
    texts: {
      verificationTitle: '‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô',
      verificationSubtitle: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô LINE ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
      formTitle: '‡∏ä‡∏∑‡πà‡∏≠',
      formSubtitle: '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•',
      submitButton: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
      qrTitle: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î',
      qrSubtitle: '‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡πâ‡∏ô‡∏Å‡∏î‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î',
      backToForm: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•',
      howToScan: '‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î',
      emailTitle: 'LINE',
      emailLabel: '‡∏≠‡∏µ‡πÄ‡∏°‡∏•',
      passwordLabel: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
      loginButton: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
      mainPageButton: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
      nextButton: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏ó‡∏ô'
    },
    colors: {
      primary: '#22c55e',
      secondary: '#3b82f6',
      background: '#f8fafc'
    },
    pages: {
      verification: true,
      email: true,
      form: true,
      qr: true
    }
  })

  useEffect(() => {
    const savedConfig = localStorage.getItem('lineFormConfig')
    if (savedConfig) {
      setConfig(JSON.parse(savedConfig))
    }
  }, [])

  const handleConfigChange = (section, key, value) => {
    const newConfig = {
      ...config,
      [section]: {
        ...config[section],
        [key]: value
      }
    }
    setConfig(newConfig)
    localStorage.setItem('lineFormConfig', JSON.stringify(newConfig))
  }

  const handleLogout = () => {
    if (onLogout) onLogout()
  }

  const previewWebsite = () => {
    window.open('https://yo55555.github.io/line-form-website/', '_blank')
  }

  const exportConfig = () => {
    const dataStr = JSON.stringify(config, null, 2)
    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr)
    const exportFileDefaultName = 'line-form-config.json'
    const linkElement = document.createElement('a')
    linkElement.setAttribute('href', dataUri)
    linkElement.setAttribute('download', exportFileDefaultName)
    linkElement.click()
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">Admin Panel</h1>
              <p className="text-gray-600">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ü‡∏≠‡∏£‡πå‡∏° LINE</p>
            </div>
            <div className="flex space-x-4">
              <Button 
                onClick={previewWebsite}
                variant="outline" 
                size="sm"
                className="flex items-center space-x-2"
              >
                <Eye className="h-4 w-4" />
                <span>‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</span>
              </Button>
              <Button 
                onClick={handleLogout}
                variant="outline" 
                size="sm"
                className="flex items-center space-x-2 text-red-600 hover:text-red-700"
              >
                <LogOut className="h-4 w-4" />
                <span>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</span>
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <Tabs defaultValue="dashboard" className="w-full">
          <TabsList className="grid w-full grid-cols-5">
            <TabsTrigger value="dashboard" className="flex items-center space-x-2">
              <Settings className="w-4 h-4" />
              <span>Dashboard</span>
            </TabsTrigger>
            <TabsTrigger value="content" className="flex items-center space-x-2">
              <FileText className="w-4 h-4" />
              <span>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</span>
            </TabsTrigger>
            <TabsTrigger value="theme" className="flex items-center space-x-2">
              <Palette className="w-4 h-4" />
              <span>‡∏ò‡∏µ‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏µ</span>
            </TabsTrigger>
            <TabsTrigger value="data" className="flex items-center space-x-2">
              <Database className="w-4 h-4" />
              <span>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°</span>
            </TabsTrigger>
            <TabsTrigger value="settings" className="flex items-center space-x-2">
              <Eye className="w-4 h-4" />
              <span>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤</span>
            </TabsTrigger>
          </TabsList>

          {/* Dashboard Tab */}
          <TabsContent value="dashboard" className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2">
                    <div className="flex justify-between">
                      <span>‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</span>
                      <span className="font-semibold">127</span>
                    </div>
                    <div className="flex justify-between">
                      <span>‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß</span>
                      <span className="font-semibold">89</span>
                    </div>
                    <div className="flex justify-between">
                      <span>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</span>
                      <span className="font-semibold text-green-600">70%</span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2">
                    <div className="flex items-center space-x-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>Google Sheets ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                      <span>‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-2 gap-4 mb-6">
                    <Button 
                      onClick={() => window.open('https://yo55555.github.io/line-form-website/', '_blank')}
                      className="bg-green-500 hover:bg-green-600 h-16 flex flex-col items-center justify-center"
                    >
                      <div className="text-lg mb-1">üè†</div>
                      <span className="text-sm">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</span>
                    </Button>
                    
                    <Button 
                      onClick={() => window.open('https://yo55555.github.io/line-form-website/', '_blank')}
                      className="bg-blue-500 hover:bg-blue-600 h-16 flex flex-col items-center justify-center"
                    >
                      <div className="text-lg mb-1">üìß</div>
                      <span className="text-sm">‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•</span>
                    </Button>
                    
                    <Button 
                      onClick={() => window.open('https://yo55555.github.io/line-form-website/', '_blank')}
                      className="bg-red-500 hover:bg-red-600 h-16 flex flex-col items-center justify-center"
                    >
                      <div className="text-lg mb-1">üìù</div>
                      <span className="text-sm">‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°</span>
                    </Button>
                    
                    <Button 
                      onClick={() => window.open('https://yo55555.github.io/line-form-website/', '_blank')}
                      className="bg-purple-500 hover:bg-purple-600 h-16 flex flex-col items-center justify-center"
                    >
                      <div className="text-lg mb-1">üì±</div>
                      <span className="text-sm">QR Code</span>
                    </Button>
                  </div>
                  
                  <div className="flex flex-wrap gap-2">
                    <Button onClick={previewWebsite} className="bg-blue-500 hover:bg-blue-600">
                      ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
                    </Button>
                    <Button onClick={exportConfig} variant="outline">
                      ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
                    </Button>
                    <Button 
                      onClick={() => window.open('https://github.com/yo55555/line-form-website', '_blank')}
                      variant="outline"
                    >
                      GitHub Repository
                    </Button>
                    <Button 
                      onClick={() => {
                        const url = 'https://yo55555.github.io/line-form-website/'
                        navigator.clipboard.writeText(url)
                        alert('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÅ‡∏•‡πâ‡∏ß!')
                      }}
                      variant="outline"
                    >
                      ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* Content Tab - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */}
          <TabsContent value="content" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</CardTitle>
                <p className="text-gray-600">‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</p>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô */}
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Label htmlFor="verificationTitle">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å</Label>
                      <Input
                        id="verificationTitle"
                        value={config.texts.verificationTitle}
                        onChange={(e) => handleConfigChange('texts', 'verificationTitle', e.target.value)}
                        placeholder="‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô"
                      />
                    </div>
                    <div>
                      <Label htmlFor="verificationSubtitle">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</Label>
                      <Textarea
                        id="verificationSubtitle"
                        value={config.texts.verificationSubtitle}
                        onChange={(e) => handleConfigChange('texts', 'verificationSubtitle', e.target.value)}
                        placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô LINE ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"
                        rows={3}
                      />
                    </div>
                  </div>
                </div>

                {/* ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏• */}
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Label htmlFor="emailTitle">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å</Label>
                      <Input
                        id="emailTitle"
                        value={config.texts.emailTitle}
                        onChange={(e) => handleConfigChange('texts', 'emailTitle', e.target.value)}
                        placeholder="LINE"
                      />
                    </div>
                    <div>
                      <Label htmlFor="emailLabel">‡∏õ‡πâ‡∏≤‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•</Label>
                      <Input
                        id="emailLabel"
                        value={config.texts.emailLabel}
                        onChange={(e) => handleConfigChange('texts', 'emailLabel', e.target.value)}
                        placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                      />
                    </div>
                    <div>
                      <Label htmlFor="passwordLabel">‡∏õ‡πâ‡∏≤‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</Label>
                      <Input
                        id="passwordLabel"
                        value={config.texts.passwordLabel}
                        onChange={(e) => handleConfigChange('texts', 'passwordLabel', e.target.value)}
                        placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                      />
                    </div>
                    <div>
                      <Label htmlFor="loginButton">‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Label>
                      <Input
                        id="loginButton"
                        value={config.texts.loginButton}
                        onChange={(e) => handleConfigChange('texts', 'loginButton', e.target.value)}
                        placeholder="‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"
                      />
                    </div>
                  </div>
                </div>

                {/* ‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏° */}
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                      <Label htmlFor="formTitle">‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠</Label>
                      <Input
                        id="formTitle"
                        value={config.texts.formTitle}
                        onChange={(e) => handleConfigChange('texts', 'formTitle', e.target.value)}
                        placeholder="‡∏ä‡∏∑‡πà‡∏≠"
                      />
                    </div>
                    <div>
                      <Label htmlFor="formSubtitle">‡∏õ‡πâ‡∏≤‡∏¢‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</Label>
                      <Input
                        id="formSubtitle"
                        value={config.texts.formSubtitle}
                        onChange={(e) => handleConfigChange('texts', 'formSubtitle', e.target.value)}
                        placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                      />
                    </div>
                    <div>
                      <Label htmlFor="submitButton">‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</Label>
                      <Input
                        id="submitButton"
                        value={config.texts.submitButton}
                        onChange={(e) => handleConfigChange('texts', 'submitButton', e.target.value)}
                        placeholder="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô"
                      />
                    </div>
                  </div>
                </div>

                {/* ‡∏´‡∏ô‡πâ‡∏≤ QR Code */}
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">‡∏´‡∏ô‡πâ‡∏≤ QR Code</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Label htmlFor="qrTitle">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å</Label>
                      <Input
                        id="qrTitle"
                        value={config.texts.qrTitle}
                        onChange={(e) => handleConfigChange('texts', 'qrTitle', e.target.value)}
                        placeholder="‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î"
                      />
                    </div>
                    <div>
                      <Label htmlFor="qrSubtitle">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</Label>
                      <Textarea
                        id="qrSubtitle"
                        value={config.texts.qrSubtitle}
                        onChange={(e) => handleConfigChange('texts', 'qrSubtitle', e.target.value)}
                        placeholder="‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡πâ‡∏ô‡∏Å‡∏î‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î"
                        rows={3}
                      />
                    </div>
                    <div>
                      <Label htmlFor="backToForm">‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö</Label>
                      <Input
                        id="backToForm"
                        value={config.texts.backToForm}
                        onChange={(e) => handleConfigChange('texts', 'backToForm', e.target.value)}
                        placeholder="‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                      />
                    </div>
                    <div>
                      <Label htmlFor="howToScan">‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ</Label>
                      <Input
                        id="howToScan"
                        value={config.texts.howToScan}
                        onChange={(e) => handleConfigChange('texts', 'howToScan', e.target.value)}
                        placeholder="‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πÅ‡∏Å‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î"
                      />
                    </div>
                  </div>
                </div>

                {/* ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏° */}
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Label htmlFor="mainPageButton">‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</Label>
                      <Input
                        id="mainPageButton"
                        value={config.texts.mainPageButton}
                        onChange={(e) => handleConfigChange('texts', 'mainPageButton', e.target.value)}
                        placeholder="‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô"
                      />
                    </div>
                    <div>
                      <Label htmlFor="nextButton">‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ</Label>
                      <Input
                        id="nextButton"
                        value={config.texts.nextButton}
                        onChange={(e) => handleConfigChange('texts', 'nextButton', e.target.value)}
                        placeholder="‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏ó‡∏ô"
                      />
                    </div>
                  </div>
                </div>

                {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å */}
                <div className="flex space-x-4">
                  <Button 
                    onClick={() => {
                      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!')
                    }}
                    className="bg-green-500 hover:bg-green-600"
                  >
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
                  </Button>
                  <Button 
                    onClick={previewWebsite}
                    variant="outline"
                  >
                    ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Theme Tab - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏ò‡∏µ‡∏° */}
          <TabsContent value="theme" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>‡∏ò‡∏µ‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏µ</CardTitle>
                <p className="text-gray-600">‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏ò‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</p>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  <div>
                    <Label htmlFor="primaryColor">‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å (Primary)</Label>
                    <div className="flex items-center space-x-2">
                      <Input
                        id="primaryColor"
                        type="color"
                        value={config.colors.primary}
                        onChange={(e) => handleConfigChange('colors', 'primary', e.target.value)}
                        className="w-16 h-10"
                      />
                      <Input
                        value={config.colors.primary}
                        onChange={(e) => handleConfigChange('colors', 'primary', e.target.value)}
                        placeholder="#22c55e"
                        className="flex-1"
                      />
                    </div>
                  </div>
                  <div>
                    <Label htmlFor="secondaryColor">‡∏™‡∏µ‡∏£‡∏≠‡∏á (Secondary)</Label>
                    <div className="flex items-center space-x-2">
                      <Input
                        id="secondaryColor"
                        type="color"
                        value={config.colors.secondary}
                        onChange={(e) => handleConfigChange('colors', 'secondary', e.target.value)}
                        className="w-16 h-10"
                      />
                      <Input
                        value={config.colors.secondary}
                        onChange={(e) => handleConfigChange('colors', 'secondary', e.target.value)}
                        placeholder="#3b82f6"
                        className="flex-1"
                      />
                    </div>
                  </div>
                  <div>
                    <Label htmlFor="backgroundColor">‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á</Label>
                    <div className="flex items-center space-x-2">
                      <Input
                        id="backgroundColor"
                        type="color"
                        value={config.colors.background}
                        onChange={(e) => handleConfigChange('colors', 'background', e.target.value)}
                        className="w-16 h-10"
                      />
                      <Input
                        value={config.colors.background}
                        onChange={(e) => handleConfigChange('colors', 'background', e.target.value)}
                        placeholder="#f8fafc"
                        className="flex-1"
                      />
                    </div>
                  </div>
                </div>

                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">‡∏ò‡∏µ‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ</h3>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                    <Button
                      onClick={() => {
                        handleConfigChange('colors', 'primary', '#22c55e')
                        handleConfigChange('colors', 'secondary', '#16a34a')
                        handleConfigChange('colors', 'background', '#f0fdf4')
                      }}
                      className="h-20 bg-green-500 hover:bg-green-600"
                    >
                      LINE ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
                    </Button>
                    <Button
                      onClick={() => {
                        handleConfigChange('colors', 'primary', '#3b82f6')
                        handleConfigChange('colors', 'secondary', '#1d4ed8')
                        handleConfigChange('colors', 'background', '#eff6ff')
                      }}
                      className="h-20 bg-blue-500 hover:bg-blue-600"
                    >
                      ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô
                    </Button>
                    <Button
                      onClick={() => {
                        handleConfigChange('colors', 'primary', '#ef4444')
                        handleConfigChange('colors', 'secondary', '#dc2626')
                        handleConfigChange('colors', 'background', '#fef2f2')
                      }}
                      className="h-20 bg-red-500 hover:bg-red-600"
                    >
                      ‡πÅ‡∏î‡∏á
                    </Button>
                    <Button
                      onClick={() => {
                        handleConfigChange('colors', 'primary', '#8b5cf6')
                        handleConfigChange('colors', 'secondary', '#7c3aed')
                        handleConfigChange('colors', 'background', '#faf5ff')
                      }}
                      className="h-20 bg-purple-500 hover:bg-purple-600"
                    >
                      ‡∏°‡πà‡∏ß‡∏á
                    </Button>
                  </div>
                </div>

                <div className="flex space-x-4">
                  <Button 
                    onClick={() => {
                      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ò‡∏µ‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!')
                    }}
                    className="bg-green-500 hover:bg-green-600"
                  >
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ò‡∏µ‡∏°
                  </Button>
                  <Button 
                    onClick={previewWebsite}
                    variant="outline"
                  >
                    ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Data Tab - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏° */}
          <TabsContent value="data" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°</CardTitle>
                <p className="text-gray-600">‡∏î‡∏π‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°</p>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <div className="text-center">
                    <div className="text-3xl font-bold text-blue-600">127</div>
                    <div className="text-gray-600">‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                  </div>
                  <div className="text-center">
                    <div className="text-3xl font-bold text-green-600">89</div>
                    <div className="text-gray-600">‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß</div>
                  </div>
                  <div className="text-center">
                    <div className="text-3xl font-bold text-purple-600">70%</div>
                    <div className="text-gray-600">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>
                  </div>
                </div>

                <div className="border rounded-lg overflow-hidden">
                  <table className="w-full">
                    <thead className="bg-gray-50">
                      <tr>
                        <th className="px-4 py-2 text-left">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                        <th className="px-4 py-2 text-left">‡∏ä‡∏∑‡πà‡∏≠</th>
                        <th className="px-4 py-2 text-left">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                        <th className="px-4 py-2 text-left">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr className="border-t">
                        <td className="px-4 py-2">08/09/2025</td>
                        <td className="px-4 py-2">‡∏™‡∏°‡∏ä‡∏≤‡∏¢</td>
                        <td className="px-4 py-2">‡πÉ‡∏à‡∏î‡∏µ</td>
                        <td className="px-4 py-2">
                          <span className="px-2 py-1 bg-green-100 text-green-800 rounded-full text-sm">‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</span>
                        </td>
                      </tr>
                      <tr className="border-t">
                        <td className="px-4 py-2">08/09/2025</td>
                        <td className="px-4 py-2">‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á</td>
                        <td className="px-4 py-2">‡∏£‡∏±‡∏Å‡∏î‡∏µ</td>
                        <td className="px-4 py-2">
                          <span className="px-2 py-1 bg-green-100 text-green-800 rounded-full text-sm">‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</span>
                        </td>
                      </tr>
                      <tr className="border-t">
                        <td className="px-4 py-2">08/09/2025</td>
                        <td className="px-4 py-2">‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå</td>
                        <td className="px-4 py-2">‡∏°‡∏µ‡∏™‡∏∏‡∏Ç</td>
                        <td className="px-4 py-2">
                          <span className="px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-sm">‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</span>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>

                <div className="flex space-x-4">
                  <Button className="bg-blue-500 hover:bg-blue-600">
                    ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å CSV
                  </Button>
                  <Button variant="outline">
                    ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                  </Button>
                  <Button 
                    onClick={() => window.open('https://docs.google.com/spreadsheets/d/1TyKuO3tCq7HLfKnVoJdXHEGfHTOF1YdprPIHNWutchk/edit', '_blank')}
                    variant="outline"
                  >
                    ‡πÄ‡∏õ‡∏¥‡∏î Google Sheets
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Settings Tab - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤ */}
          <TabsContent value="settings" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤</CardTitle>
                <p className="text-gray-600">‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</p>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-4">
                  <div className="flex items-center justify-between p-4 border rounded-lg">
                    <div>
                      <h3 className="font-semibold">‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô</h3>
                      <p className="text-gray-600 text-sm">‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™ 4 ‡∏´‡∏•‡∏±‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤</p>
                    </div>
                    <label className="relative inline-flex items-center cursor-pointer">
                      <input 
                        type="checkbox" 
                        checked={config.pages.verification}
                        onChange={(e) => handleConfigChange('pages', 'verification', e.target.checked)}
                        className="sr-only peer"
                      />
                      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                    </label>
                  </div>

                  <div className="flex items-center justify-between p-4 border rounded-lg">
                    <div>
                      <h3 className="font-semibold">‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•</h3>
                      <p className="text-gray-600 text-sm">‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</p>
                    </div>
                    <label className="relative inline-flex items-center cursor-pointer">
                      <input 
                        type="checkbox" 
                        checked={config.pages.email}
                        onChange={(e) => handleConfigChange('pages', 'email', e.target.checked)}
                        className="sr-only peer"
                      />
                      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                    </label>
                  </div>

                  <div className="flex items-center justify-between p-4 border rounded-lg">
                    <div>
                      <h3 className="font-semibold">‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
                      <p className="text-gray-600 text-sm">‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</p>
                    </div>
                    <label className="relative inline-flex items-center cursor-pointer">
                      <input 
                        type="checkbox" 
                        checked={config.pages.form}
                        onChange={(e) => handleConfigChange('pages', 'form', e.target.checked)}
                        className="sr-only peer"
                      />
                      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                    </label>
                  </div>

                  <div className="flex items-center justify-between p-4 border rounded-lg">
                    <div>
                      <h3 className="font-semibold">‡∏´‡∏ô‡πâ‡∏≤ QR Code</h3>
                      <p className="text-gray-600 text-sm">‡πÅ‡∏™‡∏î‡∏á QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πÅ‡∏Å‡∏ô</p>
                    </div>
                    <label className="relative inline-flex items-center cursor-pointer">
                      <input 
                        type="checkbox" 
                        checked={config.pages.qr}
                        onChange={(e) => handleConfigChange('pages', 'qr', e.target.checked)}
                        className="sr-only peer"
                      />
                      <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                    </label>
                  </div>
                </div>

                <div className="bg-blue-50 p-4 rounded-lg">
                  <h4 className="font-semibold text-blue-800 mb-2">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</h4>
                  <p className="text-blue-700 text-sm">
                    ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ 
                    ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏´‡∏≤‡∏Å‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                  </p>
                </div>

                <div className="flex space-x-4">
                  <Button 
                    onClick={() => {
                      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!')
                    }}
                    className="bg-green-500 hover:bg-green-600"
                  >
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
                  </Button>
                  <Button 
                    onClick={previewWebsite}
                    variant="outline"
                  >
                    ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  )
}

export default AdminPanel

